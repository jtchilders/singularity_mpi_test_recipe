Bootstrap: shub
From: jtchilders/singularity_mpi_test_recipe:dvs8_py36_mpi33_bzl19

%post
   echo setting up devtoolset8
   # setup devtoolset8
   scl enable devtoolset-8 bash
   export PYTHONPATH=
    
   export JAVA_VERSION=1.8

   # adding mpich to env
   export PATH=$PATH:/mpich/install/bin
   export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/mpich/install/lib

   echo installing intel-numpy
   pip install intel-numpy intel-scipy
   pip install --upgrade --no-deps keras-applications keras-preprocessing wheel
   
   TF_TAG=v1.13.1
   BAZEL_VERSION=0.19.0
   
   echo checking out tensorflow $TF_TAG and building
   mkdir /tensorflow
   cd /tensorflow
   
   git clone https://github.com/tensorflow/tensorflow
   cd tensorflow
   git checkout $TF_TAG
   TF_ROOT=$PWD

   export CI_BUILD_PYTHON=python3.6
   export PYTHON_BIN_PATH=$(which python3.6)
   export PYTHON_LIB_PATH="$($PYTHON_BIN_PATH -c 'import site; print(site.getsitepackages()[0])')"
   export PYTHONPATH=$PYTHON_LIB_PATH
   export PYTHON_ARG=$PYTHON_LIB_PATH
   export TF_CUDA_CLANG=0
   export TF_DOWNLOAD_CLANG=0
   export TF_DOWNLOAD_MKL=0
   export TF_ENABLE_XLA=0
   export TF_NEED_CUDA=0
   export TF_NEED_GCP=0
   export TF_NEED_GDR=0
   export TF_NEED_HDFS=0
   export TF_NEED_JEMALLOC=0
   export TF_NEED_KAFKA=0
   export TF_NEED_MKL=0
   export TF_NEED_MPI=0
   export MPI_HOME=/mpich/install
   export TF_NEED_OPENCL=0
   export TF_NEED_OPENCL_SYCL=0
   export TF_NEED_S3=0
   export TF_NEED_VERBS=0
   export TF_NEED_ROCM=0
   export TF_SET_ANDROID_WORKSPACE=0

   export GCC_HOST_COMPILER_PATH=$(which gcc)
   export CC_OPT_FLAGS="-march=native" 
   
   echo running configuration of tensorflow
   export PATH=$PATH:/bazel/bazel-$BAZEL_VERSION/output
   ./configure

   echo building tensorflow $TF_TAG
   bazel build --verbose_failures --config=mkl --copt=-g --strip=never  --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-mavx512f --copt=-mavx512pf --copt=-mavx512cd --copt=-mavx512er --copt='-mtune=knl' --copt='-march=knl' --copt="-DEIGEN_USE_VML" //tensorflow/tools/pip_package:build_pip_package
   
   if [ ! $? -eq 0 ]; then
      echo downloading Eigen fixes
      wget https://raw.githubusercontent.com/markdryan/eigen-git-mirror/tf1.13/Eigen/src/Core/arch/AVX512/Complex.h
      wget https://raw.githubusercontent.com/markdryan/eigen-git-mirror/tf1.13/Eigen/src/Core/arch/AVX512/PacketMath.h
      
      echo copying to build dir
      cp Complex.h bazel-tensorflow/external/eigen_archive/Eigen/src/Core/arch/AVX512/
      cp PacketMath.h bazel-tensorflow/external/eigen_archive/Eigen/src/Core/arch/AVX512/
      
      echo restarting build
      bazel build --verbose_failures --config=mkl --copt=-g --strip=never  --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-mavx512f --copt=-mavx512pf --copt=-mavx512cd --copt=-mavx512er --copt='-mtune=knl' --copt='-march=knl' --copt="-DEIGEN_USE_VML" //tensorflow/tools/pip_package:build_pip_package
   fi

   mkdir ../tf_wheels

   echo building wheel
   bazel-bin/tensorflow/tools/pip_package/build_pip_package ../tf_wheels
   
   pip install --upgrade ../tf_wheels/*.whl


